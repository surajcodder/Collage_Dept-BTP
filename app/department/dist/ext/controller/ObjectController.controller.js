sap.ui.define(["sap/ui/core/mvc/ControllerExtension"],function(e){"use strict";var t;return e.extend("department.ext.controller.ObjectController",{override:{onInit:function(){var e=this.base.getExtensionAPI().getModel();var n=(new sap.ushell.services.UserInfo).getEmail();t=n},routing:{onBeforeBinding:async function(){debugger;var e=this.base.getExtensionAPI().getModel();if(!e){console.error("Model is not available.");return}var n;if(typeof e.getServiceUrl==="function"){n=e.getServiceUrl();console.log("Service URL:",n)}else{console.error("Unable to determine the service URL.");return}try{const e=await new Promise((e,t)=>{jQuery.ajax({url:n+"/Teacher?$filter=Status eq 'Approved'",method:"GET",dataType:"json",success:function(t){e(t)},error:function(e,n,r){t(new Error(n+": "+r))}})});console.log("Fetched Approved Teachers:",e)}catch(e){console.error("Error fetching Teacher data",e)}try{const e=await new Promise((e,t)=>{jQuery.ajax({url:n+"/Roll",method:"GET",dataType:"json",success:function(t){e(t)},error:function(e,n,r){t(new Error(n+": "+r))}})});console.log("Fetched Roll data:",e);var r;if(e&&e.value){e.value.forEach(function(e){if(e.email===t){r=e.roll}})}else{console.log("No data found or invalid response format")}var o=this.getView().getBindingContext();var a=o.getPath();var i=null;var s=a.match(/DepartmentID='([^']+)'/);if(s&&s[1]){i=s[1]}if(i){const e=await new Promise((e,t)=>{jQuery.ajax({url:n+"/Department?$filter=DepartmentID eq '"+i+"'",method:"GET",dataType:"json",success:function(t){e(t)},error:function(e,n,r){t(new Error(n+": "+r))}})});console.log("Fetched Department data:",e);var l;if(e&&e.value&&e.value.length>0){l=e.value[0].DepartmentName}console.log("DepartmentName:",l);debugger;const t=this.base.getView().mAggregations.content[0];const o=t.findAggregatedObjects(true,function(e){return e.isA("sap.m.Button")&&(e.getId().includes("Edit")||e.getId().includes("Delete"))});const a=o[0];const s=o[1];if(r==="Admin"){this.base.getView().findAggregatedObjects(true,function(e){return e.isA("sap.m.Button")}).forEach(function(e){if(a){a.setEnabled(true)}if(s){s.setVisible(true);s.setEnabled(true)}})}else if(r&&l&&r===l){console.log("same");this.base.getView().findAggregatedObjects(true,function(e){return e.isA("sap.m.Button")}).forEach(function(e){if(a){a.setEnabled(true)}if(s){s.setVisible(false);s.setEnabled(false)}})}else{console.log("different");this.base.getView().findAggregatedObjects(true,function(e){return e.isA("sap.m.Button")}).forEach(function(e){if(a&&s){a.setVisible(false);s.setVisible(false);a.setEnabled(false);s.setEnabled(false)}if(e.getId().includes("Edit")||e.getId().includes("Delete")||e.getId().includes("Create")){e.setEnabled(false)}})}}}catch(e){console.error("Error fetching Roll data",e)}if(r!=="Admin"){debugger;this.base.getView().findAggregatedObjects(true,function(e){return e.isA("sap.m.Input")&&e.getBindingPath("value")==="DepartmentName"}).forEach(function(e){e.setEditable(false)})}}}}})});
//# sourceMappingURL=ObjectController.controller.js.map